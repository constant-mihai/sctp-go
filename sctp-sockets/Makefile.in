CC := gcc
CFLAGS = -Wall \
		 -Wextra \
		 -fno-diagnostics-show-caret \
		 -Wcast-align \
		 -Werror=return-type \
		 -fPIC
LDFLAGS = -lsctp -lpthread
SHELL:= /bin/bash

ifdef VERBOSITY
	VERBOSE =
else
	VERBOSE = @
endif

# address sanitization:
# https://developers.redhat.com/blog/2021/05/05/memory-error-checking-in-c-and-c-comparing-sanitizers-and-valgrind
# https://www.osc.edu/resources/getting_started/howto/howto_use_address_sanitizer
# https://gcc.gnu.org/onlinedocs/gcc/Instrumentation-Options.html
ifdef DEBUG
	CFLAGS += -g -O0 -Ddebug \
			  -fprofile-arcs -ftest-coverage
	LDFLAGS += -lgcov -coverage
endif

#main.c:46 terminating
#==2733468==LeakSanitizer has encountered a fatal error.
#==2733468==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
#==2733468==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)
ifdef MEMORY_CHECK
	CFLAGS += -fprofile-arcs -ftest-coverage \
			  -fsanitize=address -fsanitize=leak
	LDFLAGS += -fsanitize=address -fsanitize=leak -static-libasan
endif

# cc1: error: ‘-fsanitize=thread’ is incompatible with ‘-fsanitize=address’
# cc1: error: ‘-fsanitize=leak’ is incompatible with ‘-fsanitize=thread’
ifdef RACE_CHECK 
	CFLAGS += -g -O0 -Ddebug \
		      -fsanitize=thread
	LDFLAGS += -fsanitize=thread -static-libasan
endif
